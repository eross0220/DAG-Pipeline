services:
  api:
    build: .
    volumes:
      - "./app:/app/app"
      - "./uploads:/app/uploads"
      - "./outputs:/app/outputs"
      - "./app.db:/app/app.db"
    env_file:
      - ".env"
    ports:
      - "8333:8333"
    depends_on:
      - worker1
      - worker2
      - kafka1
    command: uvicorn app.main:app --host 0.0.0.0 --port 8333 --reload
  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: app-ui
    ports:
      - "3002:3000"
    volumes:
      - "./ui:/app"
      - /app/node_modules # Preserve node_modules
      - /app/.next # Preserve build cache
    env_file:
      - "./ui/.env"
    command: npm start
    depends_on:
      - api
    restart: unless-stopped

  worker1:
    build: .
    volumes:
      - "./app:/app/app"
      - "./uploads:/app/uploads"
      - "./outputs:/app/outputs"
    env_file:
      - ".env"
    depends_on:
      - rq_redis
    command: rq worker --url redis://rq_redis:6379 pipeline_tasks

  worker2:
    build: .
    volumes:
      - "./app:/app/app"
      - "./uploads:/app/uploads"
      - "./outputs:/app/outputs"
    env_file:
      - ".env"
    depends_on:
      - rq_redis
    command: rq worker --url redis://rq_redis:6379 pipeline_tasks

  rq_redis:
    image: redis:latest

  zoo1:
    image: confluentinc/cp-zookeeper:7.8.0
    hostname: zoo1
    container_name: zoo1
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - "19092:9092"
      - "29092:29092"
      - "19999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
