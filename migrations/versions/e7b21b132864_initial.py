"""initial

Revision ID: e7b21b132864
Revises: 
Create Date: 2025-08-18 19:39:46.479455

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e7b21b132864'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pipelines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pipelines', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pipelines_id'), ['id'], unique=False)

    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_id'), ['id'], unique=False)

    op.create_table('blocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pipeline_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('block_type', sa.Enum('CSV_READER', 'SENTIMENT_ANALYSIS', 'TOXICITY_DETECTION', 'FILE_WRITER', name='blocktype'), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pipeline_id'], ['pipelines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('blocks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_blocks_id'), ['id'], unique=False)

    op.create_table('pipeline_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pipeline_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('QUEUED', 'RUNNING', 'COMPLETED', 'FAILED', name='pipelinestatus'), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['pipeline_id'], ['pipelines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pipeline_runs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pipeline_runs_id'), ['id'], unique=False)

    op.create_table('block_dependencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('block_id', sa.Integer(), nullable=True),
    sa.Column('depends_on_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['block_id'], ['blocks.id'], ),
    sa.ForeignKeyConstraint(['depends_on_id'], ['blocks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('block_dependencies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_block_dependencies_id'), ['id'], unique=False)

    op.create_table('block_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pipeline_run_id', sa.Integer(), nullable=True),
    sa.Column('block_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', name='blockstatus'), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['block_id'], ['blocks.id'], ),
    sa.ForeignKeyConstraint(['pipeline_run_id'], ['pipeline_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('block_runs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_block_runs_id'), ['id'], unique=False)

    op.create_table('artifacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('block_run_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('artifact_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['block_run_id'], ['block_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('artifacts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_artifacts_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('artifacts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_artifacts_id'))

    op.drop_table('artifacts')
    with op.batch_alter_table('block_runs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_block_runs_id'))

    op.drop_table('block_runs')
    with op.batch_alter_table('block_dependencies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_block_dependencies_id'))

    op.drop_table('block_dependencies')
    with op.batch_alter_table('pipeline_runs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pipeline_runs_id'))

    op.drop_table('pipeline_runs')
    with op.batch_alter_table('blocks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_blocks_id'))

    op.drop_table('blocks')
    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_id'))

    op.drop_table('product')
    with op.batch_alter_table('pipelines', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pipelines_id'))

    op.drop_table('pipelines')
    # ### end Alembic commands ###
